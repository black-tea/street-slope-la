runApp('GitHub/vzcd-shiny/app/VZ_Viewer')
runApp('GitHub/vzcd-shiny/app/VZ_Viewer')
runApp('GitHub/vzcd-shiny/app/VZ_Viewer')
runApp('GitHub/vzcd-shiny/app/VZ_Viewer')
runApp('GitHub/vzcd-shiny/app/VZ_Viewer')
shiny::runApp('GitHub/vzcd-shiny/app/VZ_Viewer')
shiny::runApp('GitHub/vzcd-shiny/app/VZ_Viewer')
shiny::runApp('GitHub/vzcd-shiny/app/VZ_Viewer')
shiny::runApp('GitHub/vzcd-shiny/app/VZ_Viewer')
shiny::runApp('GitHub/vzcd-shiny/app/VZ_Viewer')
runApp('GitHub/vzcd-shiny/app/VZ_Viewer')
runApp('GitHub/vzcd-shiny/app/VZ_Viewer')
shiny::runApp('GitHub/acs-commute-shiny/acs_commute')
install.packages('acs')
install.packages('tigris')
runApp('GitHub/acs-commute-shiny/acs_commute')
runApp('GitHub/acs-commute-shiny/acs_commute')
runApp('GitHub/acs-commute-shiny/acs_commute')
runApp('GitHub/acs-commute-shiny/acs_commute')
runApp('GitHub/acs-commute-shiny/acs_commute')
runApp('GitHub/acs-commute-shiny/acs_commute')
runApp('GitHub/acs-commute-shiny/acs_commute')
runApp('GitHub/acs-commute-shiny/acs_commute')
runApp('GitHub/acs-commute-shiny/acs_commute')
runApp('GitHub/acs-commute-shiny/acs_commute')
runApp('GitHub/acs-commute-shiny/acs_commute')
runApp('GitHub/acs-commute-shiny/acs_commute')
runApp('GitHub/acs-commute-shiny/acs_commute')
runApp('GitHub/acs-commute-shiny/acs_commute')
la_tract_modesplit <- acs.fetch(endyear = 2015, geography = la_tracts, table.number = "B08301", col.names = "pretty")
##### Setup
library(acs) # For downloading ACS Data
library(tigris) # For census boundary data
library(leaflet) # For interactive mapping
api.key.install(key="00a2d85a7c7b1346879d0e355cc0361f30188f28") # ACS Data API Key
##### Download / Prep Data
# Tigris: ACS Boundaries
options(tigris_class = "sf")
tracts <- tracts(state = 'CA', county = "Los Angeles", cb=TRUE) # If cb is set to TRUE, download a generalized (1:500k) tracts file. Defaults to FALSE (the most detailed TIGER/Line file)
# ACS: Means of Transportation for all census tracts in the Los Angeles County
years <- c(2010,2011,2012,2013,2014,2015)
la_tracts <- geo.make(state = "CA", county = "Los Angeles", tract = "*")
la_tract_modesplit <- acs.fetch(endyear = 2015, geography = la_tracts, table.number = "B08301", col.names = "pretty")
la_tract_modesplit <- lapply(years, function(x) {
acs.fetch(endyear = x,
geography = la_tracts,
table.number = "B08301",
col.names = "pretty")
})
shiny::runApp('GitHub/acs-commute-shiny/acs_commute')
runApp('GitHub/vzcd-shiny/app/VZ_Viewer')
install.packages('tidyverse')
setwd("~/GitHub/la-street-slope")
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read(system.file("Data/Street_Pavement_Condition.shp"))
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read(system.file("Data/Street_Pavement_Condition.shp", package="sf"), quiet=TRUE)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read(system.file("Data/Street_Pavement_Condition", package="sf"), quiet=TRUE)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read(system.file("Data/Street_Pavement_Condition.shp", package="sf"), quiet=TRUE)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read(system.file("Data/Street_Pavement_Condition", package="sf"), quiet=TRUE)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read(system.file("Data/Street_Pavement_Condition.shp", package="sf"), quiet=TRUE)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read(system.file("C:/Users/dotcid034/Documents/GitHub/la-street-slope/Data/Street_Pavement_Condition.shp", package="sf"), quiet=TRUE)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read(system.file("C:\Users\dotcid034\Documents\GitHub\la-street-slope\Data\Street_Pavement_Condition.shp", package="sf"), quiet=TRUE)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read(system.file("C:\\Users\dotcid034\Documents\GitHub\la-street-slope\Data\Street_Pavement_Condition.shp", package="sf"), quiet=TRUE)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read(system.file("C:\\Users\\dotcid034\Documents\GitHub\la-street-slope\Data\Street_Pavement_Condition.shp", package="sf"), quiet=TRUE)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read(system.file("C:\\Users\\dotcid034\\Documents\\GitHub\\la-street-slope\\Data\\Street_Pavement_Condition.shp", package="sf"), quiet=TRUE)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
fname <- system.file("Data/Street_Pavement_Condition.shp", package="sf")
bss <- st_read(system.file("C:\\Users\\dotcid034\\Documents\\GitHub\\la-street-slope\\Data\\Street_Pavement_Condition.shp", package="sf"), quiet=TRUE)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
fname <- system.file("Data/Street_Pavement_Condition.shp", package="sf")
print(fname)
bss <- st_read(system.file("C:\\Users\\dotcid034\\Documents\\GitHub\\la-street-slope\\Data\\Street_Pavement_Condition.shp", package="sf"), quiet=TRUE)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
fname <- system.file("~Data/Street_Pavement_Condition.shp", package="sf")
print(fname)
bss <- st_read(system.file("C:\\Users\\dotcid034\\Documents\\GitHub\\la-street-slope\\Data\\Street_Pavement_Condition.shp", package="sf"), quiet=TRUE)
dir()
file.exists("Data")
file.exists("Data/Street_Pavement_Condition.shp")
fname <- system.file("Data/Street_Pavement_Condition.shp")
fname
fname <- system.file("Data/Street_Pavement_Condition.shp",package="sf")
fname
fname <- "Data/Street_Pavement_Condition.shp"
fname
st_read(fname)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp",quiet=TRUE)
boe <- st_read("Data/Streets_Centerline.shp", quiet=TRUE)
int <- st_read("Data/Intersections.shp", quiet=TRUE)
# import elevation data
head(bss)
head(boe)
attributes(boe)
attributes(boe)
glimpse(boe)
glimpse(boe)
glimpse(bss)
glimpse(bss)
glimpse(boe)
glimpse(bss)
# trim bss centerline
bss <- bss %>%
select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = SECT_ID,
street = PRIME,
from = FROM_,
to = TO_,
surface = SURF1,
length.ft <- ZLENGTH,
width.ft <- ZWIDTH,
geom <- geometry)
# trim bss centerline
bss <- bss %>%
select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft <- 'ZLENGTH',
width.ft <- 'ZWIDTH',
geom <- 'geometry')
# trim bss centerline
bss <- bss %>%
select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry')
# trim boe centerline
boe <- boe %>%
select(ASSETID, INT_ID_FRO, INT_ID_TO, SECT_ID, OLD_STREET, Street_Des) %>%
rename(asset.id = 'ASSETID',
fromint.id = 'INT_ID_FRO',
toint.id = 'INT_ID_TO',
sect.id = 'SECT_ID',
old.desig = 'OLD_STREET',
new.desig = 'Street_Des')
# left-join bss <- boe
streets <- bss %>%
left_join(boe, by="sect.id")
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp",quiet=TRUE)
boe <- st_read("C:/Users/dotcid034/Documents/NonGitHubData/boe/Streets_Centerline.shp", quiet=TRUE)
int <- st_read("Data/Intersections.shp", quiet=TRUE)
# import elevation data
la_n <- st_read()
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp",quiet=TRUE)
boe <- st_read("C:/Users/dotcid034/Documents/NonGitHubData/boe/Streets_Centerline.shp", quiet=TRUE)
int <- st_read("Data/Intersections.shp", quiet=TRUE)
# import elevation data
#la_n <- st_read()
#la_s <- st_read()
glimpse(boe)
glimpse(bss)
# trim bss centerline
bss <- bss %>%
select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry')
# trim boe centerline
boe <- boe %>%
select(ASSETID, INT_ID_FRO, INT_ID_TO, SECT_ID, OLD_STREET, Street_Des) %>%
rename(asset.id = 'ASSETID',
fromint.id = 'INT_ID_FRO',
toint.id = 'INT_ID_TO',
sect.id = 'SECT_ID',
old.desig = 'OLD_STREET',
new.desig = 'Street_Des') %>%
st_set_geometry(NULL)
# left-join bss <- boe
streets <- bss %>%
left_join(boe, by="sect.id")
# trim bss centerline
bss <- bss %>%
select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry')
glimpse(boe)
glimpse(bss)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp",quiet=TRUE)
boe <- st_read("C:/Users/dotcid034/Documents/NonGitHubData/boe/Streets_Centerline.shp", quiet=TRUE)
int <- st_read("Data/Intersections.shp", quiet=TRUE)
# import elevation data
#la_n <- st_read()
#la_s <- st_read()
# trim bss centerline
bss <- bss %>%
select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry') %>%
mutate(sect.id = as.double(sect.id))
# trim boe centerline
boe <- boe %>%
select(ASSETID, INT_ID_FRO, INT_ID_TO, SECT_ID, OLD_STREET, Street_Des) %>%
rename(asset.id = 'ASSETID',
fromint.id = 'INT_ID_FRO',
toint.id = 'INT_ID_TO',
sect.id = 'SECT_ID',
old.desig = 'OLD_STREET',
new.desig = 'Street_Des') %>%
mutate(sect.id = as.double(sect.id)) %>%
st_set_geometry(NULL)
# left-join bss <- boe
#streets <- bss %>%
#  left_join(boe, by="sect.id")
glimpse(boe)
glimpse(bss)
# left join bss <- boe
streets <- bss %>%
left_join(boe, by='sect.id')
# left join bss <- boe
streets <- bss %>%
inner_join(boe, by='sect.id')
map <- leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolylines(
color = '#0E016F',
weight = 3,
opacity = 1,
data = streets
)
map
map <- leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolylines(
color = '#0E016F',
weight = 3,
opacity = 1,
data = streets
)
map <- leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolylines(
color = '#0E016F',
weight = 3,
opacity = 1,
data = streets
)
map
map <- leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolylines(
color = '#0E016F',
weight = 1,
opacity = 1,
data = streets
)
map
rm(list=ls())
install.packages('raster')
library(raster)
# import elevation data
la_n <- raster("C:/Users/dotcid034/Documents/NonGitHubData/n35w119/grdn35w119_13")
la_s <- raster("C:/Users/dotcid034/Documents/NonGitHubData/n34w119/grdn34w119_13")
plot(la_n)
plot(la_s)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp",quiet=TRUE)
boe <- st_read("C:/Users/dotcid034/Documents/NonGitHubData/boe/Streets_Centerline.shp", quiet=TRUE)
int <- st_read("Data/Intersections.shp", quiet=TRUE)
# import elevation data
la_n <- st_read("C:/Users/dotcid034/Documents/NonGitHubData/n35w119/ned_13arcsec_g.shp")
la_s <- st_read("C:/Users/dotcid034/Documents/NonGitHubData/n34w119/ned_13arcsec_g.shp")
glimpse(int)
int <- int %>%
select(ASSETID, CL_NODE_ID, X, Y, LAT, LON, geometry) %>%
rename(asset.id = 'ASSETID',
clnode.id = 'CL_NODE_ID',
x = 'X',
y = 'Y',
lat = 'LAT',
lon = 'LON',
geom = 'geometry')
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp",quiet=TRUE)
boe <- st_read("C:/Users/dotcid034/Documents/NonGitHubData/boe/Streets_Centerline.shp", quiet=TRUE)
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp",quiet=TRUE)
boe <- st_read("C:/Users/dotcid034/Documents/NonGitHubData/boe/Streets_Centerline.shp", quiet=TRUE)
int <- st_read("Data/Intersections.shp", quiet=TRUE)
# trim bss centerline
bss <- bss %>%
select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry') %>%
mutate(sect.id = as.double(sect.id))
# trim bss centerline
bss <- bss %>%
select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry') %>%
mutate(sect.id = as.double(sect.id))
rm(list=ls())
# load libraries
library(sf)
library(tidyverse)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp",quiet=TRUE)
boe <- st_read("C:/Users/dotcid034/Documents/NonGitHubData/boe/Streets_Centerline.shp", quiet=TRUE)
int <- st_read("Data/Intersections.shp", quiet=TRUE)
glimpse(boe)
glimpse(bss)
# trim bss centerline
bss <- bss %>%
select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry') %>%
mutate(sect.id = as.double(sect.id))
# trim bss centerline
bss <- bss %>%
dplyr::select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry') %>%
mutate(sect.id = as.double(sect.id))
# trim boe centerline
boe <- boe %>%
dplyr::select(ASSETID, INT_ID_FRO, INT_ID_TO, SECT_ID, OLD_STREET, Street_Des) %>%
rename(asset.id = 'ASSETID',
fromint.id = 'INT_ID_FRO',
toint.id = 'INT_ID_TO',
sect.id = 'SECT_ID',
old.desig = 'OLD_STREET',
new.desig = 'Street_Des') %>%
mutate(sect.id = as.double(sect.id)) %>%
st_set_geometry(NULL)
# left join bss <- boe
streets <- bss %>%
inner_join(boe, by='sect.id')
glimpse(streets)
glimpse(int)
int <- int %>%
dplyr::select(ASSETID, CL_NODE_ID, X, Y, LAT, LON, geometry) %>%
rename(asset.id = 'ASSETID',
clnode.id = 'CL_NODE_ID',
x = 'X',
y = 'Y',
lat = 'LAT',
lon = 'LON',
geom = 'geometry')
int <- int %>%
dplyr::select(ASSETID, CL_NODE_ID, X, Y, LAT, LON, geometry) %>%
rename(asset.id = 'ASSETID',
clnode.id = 'CL_NODE_ID',
x = 'X',
y = 'Y',
lat = 'LAT',
lon = 'LON',
geom = 'geometry')
library(raster)
# import elevation data
la_n <- raster("C:/Users/dotcid034/Documents/NonGitHubData/n35w119/grdn35w119_13")
la_s <- raster("C:/Users/dotcid034/Documents/NonGitHubData/n34w119/grdn34w119_13")
# merge the raster files
la <- merge(la_n, la_s)
plot(la)
values <- extract(la_raster, int)
library(raster)
# import elevation data
la_n <- raster("C:/Users/dotcid034/Documents/NonGitHubData/n35w119/grdn35w119_13")
la_s <- raster("C:/Users/dotcid034/Documents/NonGitHubData/n34w119/grdn34w119_13")
# merge the raster files
la_raster <- merge(la_n, la_s)
# view the resulting pot
plot(la_raster)
values <- extract(la_raster, int)
glimpse(int)
la@crs
