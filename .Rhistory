bss <- st_read("Data/Street_Pavement_Condition.shp",quiet=TRUE)
boe <- st_read("C:/Users/Tim/Documents/data/street-slope-la/Streets_Centerline/Streets_Centerline.shp", quiet=TRUE)
int <- st_read("Data/Intersections.shp", quiet=TRUE)
# trim bss centerline
bss <- bss %>%
select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry') %>%
mutate(sect.id = as.double(sect.id))
# trim bss centerline
bss <- bss %>%
dplyr::select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry') %>%
mutate(sect.id = as.double(sect.id))
library(dplyr)
install.packages('dplyr')
install.packages('dplyr')
install.packages("dplyr")
library(dplyr)
# trim bss centerline
bss <- bss %>%
dplyr::select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry') %>%
mutate(sect.id = as.double(sect.id))
# trim boe centerline
boe <- boe %>%
dplyr::select(ASSETID, INT_ID_FRO, INT_ID_TO, SECT_ID, OLD_STREET, Street_Des) %>%
rename(asset.id = 'ASSETID',
fromint.id = 'INT_ID_FRO',
toint.id = 'INT_ID_TO',
sect.id = 'SECT_ID',
old.desig = 'OLD_STREET',
new.desig = 'Street_Des') %>%
mutate(sect.id = as.double(sect.id)) %>%
st_set_geometry(NULL)
# load libraries
library(sf)
library(dplyr)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp",quiet=TRUE)
boe <- st_read("C:/Users/Tim/Documents/data/street-slope-la/Streets_Centerline/Streets_Centerline.shp", quiet=TRUE)
int <- st_read("Data/Intersections.shp", quiet=TRUE)
# trim bss centerline
bss <- bss %>%
dplyr::select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry') %>%
mutate(sect.id = as.double(sect.id))
# trim boe centerline
boe <- boe %>%
dplyr::select(ASSETID, INT_ID_FRO, INT_ID_TO, SECT_ID, OLD_STREET, Street_Des) %>%
rename(asset.id = 'ASSETID',
fromint.id = 'INT_ID_FRO',
toint.id = 'INT_ID_TO',
sect.id = 'SECT_ID',
old.desig = 'OLD_STREET',
new.desig = 'Street_Des') %>%
mutate(sect.id = as.double(sect.id)) %>%
st_set_geometry(NULL)
# left join bss <- boe
streets <- bss %>%
inner_join(boe, by='sect.id')
int <- int %>%
select(ASSETID, CL_NODE_ID, X, Y, LAT, LON, geometry) %>%
rename(asset.id = 'ASSETID',
clnode.id = 'CL_NODE_ID',
x = 'X',
y = 'Y',
lat = 'LAT',
lon = 'LON',
geom = 'geometry')
library(raster)
# import elevation data & merge into one raster layer
la_n <- raster("C:/Users/Tim/Documents/data/street-slope-la/n35w119/grdn35w119_13")
la_s <- raster("C:/Users/Tim/Documents/data/street-slope-la/n34w119/grdn34w119_13")
la_elev <- merge(la_n, la_s)
# preview the merged raster
plot(la_elev)
# cast as sp object, extract elevation, convert back to sf object
int_sp <- as(int, "Spatial")
# cast as sp object, extract elevation, convert back to sf object
int_sp <- as_Spatial(int)
# cast as sp object, extract elevation, convert back to sf object
int_sp <- as_Spatial(st_geometry(int))
int
str(int)
plot(int)
plot(st_geometry(int))
# load libraries
library(sf)
library(dplyr)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp",quiet=TRUE)
boe <- st_read("C:/Users/Tim/Documents/data/street-slope-la/Streets_Centerline/Streets_Centerline.shp", quiet=TRUE)
int <- st_read("Data/Intersections.shp", quiet=TRUE)
as_Spatial(int)
as(int, "Spatial")
int <- int %>%
select(ASSETID, CL_NODE_ID, X, Y, LAT, LON) %>%
rename(asset.id = 'ASSETID',
clnode.id = 'CL_NODE_ID',
x = 'X',
y = 'Y',
lat = 'LAT',
lon = 'LON')
int <- int %>%
dplyr::select(ASSETID, CL_NODE_ID, X, Y, LAT, LON) %>%
rename(asset.id = 'ASSETID',
clnode.id = 'CL_NODE_ID',
x = 'X',
y = 'Y',
lat = 'LAT',
lon = 'LON')
# cast as sp object, extract elevation, convert back to sf object
int_sp <- as(int, "Spatial")
int_elev <- extract(la_elev,
int_sp,
method='simple',
df=TRUE)
#int <- st_as_sf(int_elev)
# extract elevation
glimpse(int_elev)
# cast as sp object, extract elevation, convert back to sf object
int_sp <- as(int, "Spatial")
int_elev <- extract(la_elev,
int_sp,
method='simple')
#int <- st_as_sf(int_elev)
# extract elevation
glimpse(int_elev)
# cast as sp object, extract elevation, convert back to sf object
int_sp <- as(int, "Spatial")
int_elev <- extract(la_elev,
int_sp,
method='simple')
int_elev <- cbind(int, int_elev)
glimpse(int_elev)
streets <- streets %>%
inner_join(int_elev, by=c("fromint.id" = "clnode.id")) %>%
rename(from.elev = "int_elev") %>%
inner_join(int_elev, by=c("toint.id" = "clnode.id")) %>%
rename(to.elev = "int_elev")
# cast as sp object, extract elevation, convert back to sf object
int_sp <- as(int, "Spatial")
int_elev <- extract(la_elev,
int_sp,
method='simple')
int_elev <- cbind(int, int_elev)
int_elev <- int_elev %>%
select(clnode.id, int_elev) %>%
st_set_geometry(NULL)
# cast as sp object, extract elevation, convert back to sf object
int_sp <- as(int, "Spatial")
int_elev <- extract(la_elev,
int_sp,
method='simple')
int_elev <- cbind(int, int_elev)
int_elev <- int_elev %>%
dplyr::select(clnode.id, int_elev) %>%
st_set_geometry(NULL)
streets <- streets %>%
inner_join(int_elev, by=c("fromint.id" = "clnode.id")) %>%
rename(from.elev = "int_elev") %>%
inner_join(int_elev, by=c("toint.id" = "clnode.id")) %>%
rename(to.elev = "int_elev")
# trim bss centerline
bss <- bss %>%
dplyr::select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry') %>%
mutate(sect.id = as.double(sect.id))
# trim boe centerline
boe <- boe %>%
dplyr::select(ASSETID, INT_ID_FRO, INT_ID_TO, SECT_ID, OLD_STREET, Street_Des) %>%
rename(asset.id = 'ASSETID',
fromint.id = 'INT_ID_FRO',
toint.id = 'INT_ID_TO',
sect.id = 'SECT_ID',
old.desig = 'OLD_STREET',
new.desig = 'Street_Des') %>%
mutate(sect.id = as.double(sect.id)) %>%
st_set_geometry(NULL)
# left join bss <- boe
streets <- bss %>%
inner_join(boe, by='sect.id') %>%
mutate(length.m = 3.28084*length.ft)
streets <- streets %>%
inner_join(int_elev, by=c("fromint.id" = "clnode.id")) %>%
rename(from.elev = "int_elev") %>%
inner_join(int_elev, by=c("toint.id" = "clnode.id")) %>%
rename(to.elev = "int_elev") %>%
mutate(slope = (abs((from.elev - to.elev))/(length.m))*100)
# Set Color Palette
pal <- colorNumeric(
palette = "YlGnBu",
domain = streets$slope
)
# Create the leaflet map
map <- leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolylines(
color = ~pal(slope),
weight = 1,
opacity = 1,
data = streets) %>%
addLegend(pal = pal,
values = streets$slope,
position = "bottomright",
title = "Slope",
labFormat = labelFormat(suffix = "%"))
map
# trim bss centerline
bss <- bss %>%
dplyr::select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry') %>%
mutate(sect.id = as.double(sect.id))
# load libraries
library(sf)
library(dplyr)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp",quiet=TRUE)
boe <- st_read("C:/Users/Tim/Documents/data/street-slope-la/Streets_Centerline/Streets_Centerline.shp", quiet=TRUE)
int <- st_read("Data/Intersections.shp", quiet=TRUE)
# trim bss centerline
bss <- bss %>%
dplyr::select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry') %>%
mutate(sect.id = as.double(sect.id))
# trim boe centerline
boe <- boe %>%
dplyr::select(ASSETID, INT_ID_FRO, INT_ID_TO, SECT_ID, OLD_STREET, Street_Des) %>%
rename(asset.id = 'ASSETID',
fromint.id = 'INT_ID_FRO',
toint.id = 'INT_ID_TO',
sect.id = 'SECT_ID',
old.desig = 'OLD_STREET',
new.desig = 'Street_Des') %>%
mutate(sect.id = as.double(sect.id)) %>%
st_set_geometry(NULL)
# left join bss <- boe
streets <- bss %>%
inner_join(boe, by='sect.id') %>%
mutate(length.m = 3.28084*length.ft)
streets <- streets %>%
inner_join(int_elev, by=c("fromint.id" = "clnode.id")) %>%
rename(from.elev = "int_elev") %>%
inner_join(int_elev, by=c("toint.id" = "clnode.id")) %>%
rename(to.elev = "int_elev") %>%
mutate(slope = (abs((from.elev - to.elev))/(length.m))*100) %>%
filter(slope < 10)
# Set Color Palette
pal <- colorNumeric(
palette = "YlGnBu",
domain = streets$slope
)
# Create the leaflet map
map <- leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolylines(
color = ~pal(slope),
weight = 1,
opacity = 1,
data = streets) %>%
addLegend(pal = pal,
values = streets$slope,
position = "bottomright",
title = "Slope",
labFormat = labelFormat(suffix = "%"))
map
# load libraries
library(sf)
library(dplyr)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp",quiet=TRUE)
boe <- st_read("C:/Users/Tim/Documents/data/street-slope-la/Streets_Centerline/Streets_Centerline.shp", quiet=TRUE)
int <- st_read("Data/Intersections.shp", quiet=TRUE)
# trim bss centerline
bss <- bss %>%
dplyr::select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry') %>%
mutate(sect.id = as.double(sect.id))
# trim boe centerline
boe <- boe %>%
dplyr::select(ASSETID, INT_ID_FRO, INT_ID_TO, SECT_ID, OLD_STREET, Street_Des) %>%
rename(asset.id = 'ASSETID',
fromint.id = 'INT_ID_FRO',
toint.id = 'INT_ID_TO',
sect.id = 'SECT_ID',
old.desig = 'OLD_STREET',
new.desig = 'Street_Des') %>%
mutate(sect.id = as.double(sect.id)) %>%
st_set_geometry(NULL)
# left join bss <- boe
streets <- bss %>%
inner_join(boe, by='sect.id') %>%
mutate(length.m = 3.28084*length.ft)
la_streets <- streets %>%
inner_join(int_elev, by=c("fromint.id" = "clnode.id")) %>%
rename(from.elev = "int_elev") %>%
inner_join(int_elev, by=c("toint.id" = "clnode.id")) %>%
rename(to.elev = "int_elev") %>%
mutate(slope = (abs((from.elev - to.elev))/(length.m))*100) %>%
filter(slope > 5)
# Set Color Palette
pal <- colorNumeric(
palette = "YlGnBu",
domain = streets$slope
)
# Create the leaflet map
map <- leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolylines(
color = ~pal(slope),
weight = 1,
opacity = 1,
data = streets) %>%
addLegend(pal = pal,
values = streets$slope,
position = "bottomright",
title = "Slope",
labFormat = labelFormat(suffix = "%"))
# Set Color Palette
pal <- colorNumeric(
palette = "YlGnBu",
domain = la_streets$slope
)
# Create the leaflet map
map <- leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolylines(
color = ~pal(slope),
weight = 1,
opacity = 1,
data = la_streets) %>%
addLegend(pal = pal,
values = la_streets$slope,
position = "bottomright",
title = "Slope",
labFormat = labelFormat(suffix = "%"))
map
# load libraries
library(sf, quietly = TRUE, warn.conflicts = FALSE)
library(dplyr, quietly = TRUE, warn.conflicts = FALSE)
library(leaflet, quietly = TRUE, warn.conflicts = FALSE)
library(geosphere, quietly = TRUE, warn.conflicts = FALSE)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp",quiet=TRUE)
boe <- st_read("C:/Users/Tim/Documents/data/street-slope-la/Streets_Centerline/Streets_Centerline.shp", quiet=TRUE)
int <- st_read("Data/Intersections.shp", quiet=TRUE)
glimpse(boe)
glimpse(bss)
# trim bss centerline
bss <- bss %>%
dplyr::select(SECT_ID, PRIME, FROM_, TO_, SURF1, ZLENGTH, ZWIDTH, geometry) %>%
rename(sect.id = 'SECT_ID',
street = 'PRIME',
from = 'FROM_',
to = 'TO_',
surface = 'SURF1',
length.ft = 'ZLENGTH',
width.ft = 'ZWIDTH',
geom = 'geometry') %>%
mutate(sect.id = as.character(sect.id)) %>%
st_set_geometry(NULL)
# trim boe centerline
boe <- boe %>%
dplyr::select(ASSETID,
INT_ID_FRO,
INT_ID_TO,
SECT_ID,
STNAME,
OLD_STREET,
Street_Des) %>%
rename(asset.id = 'ASSETID',
fromint.id = 'INT_ID_FRO',
toint.id = 'INT_ID_TO',
sect.id = 'SECT_ID',
street = 'STNAME',
old.desig = 'OLD_STREET',
new.desig = 'Street_Des') %>%
mutate(sect.id = as.character(sect.id))
glimpse(int)
int <- int %>%
dplyr::select(ASSETID, CL_NODE_ID, FROM_ST, TO_ST, X, Y, LAT, LON) %>%
rename(asset.id = 'ASSETID',
clnode.id = 'CL_NODE_ID',
from = 'FROM_ST',
to = 'TO_ST',
lat = 'LAT',
lon = 'LON')
library(raster, quietly = TRUE, warn.conflicts = FALSE)
# import elevation data & merge into one raster layer
la_n <- raster("C:/Users/Tim/Documents/data/street-slope-la/n35w119/grdn35w119_13")
la_s <- raster("C:/Users/Tim/Documents/data/street-slope-la/n34w119/grdn34w119_13")
la_elev <- merge(la_n, la_s)
# preview the merged raster
plot(la_elev)
# cast as sp object, extract elevation, convert back to sf object
int_sp <- as(int, "Spatial")
int_elev <- extract(la_elev,
int_sp,
method='simple')
int_elev <- cbind(int, int_elev)
int_elev <- int_elev %>%
dplyr::select(clnode.id,
lat,
lon,
int_elev) %>%
st_set_geometry(NULL)
glimpse(int_elev)
streets <- boe %>%
mutate(len = st_length(boe)) %>% # get length
inner_join(int_elev, by=c("fromint.id" = "clnode.id")) %>%
rename(from.elev = "int_elev") %>%
inner_join(int_elev, by=c("toint.id" = "clnode.id")) %>%
rename(to.elev = "int_elev",
from.lat = "lat.x",
from.lon = "lon.x",
to.lat = "lat.y",
to.lon = "lon.y") %>%
mutate(slope = (abs((from.elev - to.elev))/(as.numeric(len)))*100) %>% # Slope
filter(!sect.id %in% c('closed', 'private', 'none', NA, 'outside')) %>%
filter(!old.desig %in% c('Unknown Type or Closed Street',NA)) %>%
filter(as.numeric(len) > 50)
# semi join boe <- bss
streets <- streets %>%
left_join(bss, by='sect.id') %>% # join to bss
dplyr::select(-street.y, -from, -to, -surface, -length.ft) %>% # only keep width
rename(street = 'street.x') %>%
distinct(asset.id, .keep_all=TRUE) #unique assetIDs, but keep all cols
# Sort by slope
streets %>%
mutate(From = paste0("(", from.lat, ",", from.lon,")"),
To = paste0("(", to.lat, ",", to.lon, ")")) %>%
dplyr::select(street, slope, len, From, To) %>%
rename(Length = 'len',
Slope = 'slope') %>%
filter(as.numeric(Length) > 150) %>%
arrange(desc(Slope)) %>%
head() %>%
st_set_geometry(NULL)
# Set Color Palette
pal <- colorNumeric(
palette = "YlGnBu",
domain = streets$slope
)
# Create the map
plot(x = streets)
svg(filename="LAStreets_slope.svg",
width=15,
height=20,
pointsize=12)
plot(streets["slope"])
dev.off()
st_write(streets, "streets_slope.shp")
